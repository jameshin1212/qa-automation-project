{
  "info": {
    "_postman_id": "qa-automation-whatap",
    "name": "WhaTap QA API Tests",
    "description": "WhaTap QA 자동화 프로젝트 - 사용자 등록 API 테스트 모음",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Positive Tests",
      "item": [
        {
          "name": "TC-001: Valid Registration",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.email).to.eql(pm.variables.get('email'));",
                  "});",
                  "",
                  "pm.test(\"Password is hashed\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.password) {",
                  "        pm.expect(jsonData.password).to.not.eql(pm.variables.get('password'));",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.variables.set('email', 'valid.user@test.com');",
                  "pm.variables.set('password', 'Test1234!');"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-002: Email with Plus Sign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Email with + is accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email).to.include('+');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user+tag@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-003: Korean Domain Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Korean domain accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email).to.include('naver.com');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"korean.user@naver.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-004: Long Email Address",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Long email accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email.length).to.be.above(50);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"very.long.email.address.with.many.dots@example.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "Negative Tests",
      "item": [
        {
          "name": "TC-005: Invalid Email - Missing @",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is INVALID_EMAIL\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"invalidemail.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-006: Invalid Email - Missing Local Part",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is INVALID_EMAIL\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-007: Invalid Email - Missing Domain",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is INVALID_EMAIL\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-008: Password Too Short",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is INVALID_PASSWORD\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_PASSWORD');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"Test1!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-009: Password Missing Uppercase",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is WEAK_PASSWORD\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('WEAK_PASSWORD');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-010: Password Missing Lowercase",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is WEAK_PASSWORD\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('WEAK_PASSWORD');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"TEST1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-011: Empty Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is INVALID_EMAIL\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-012: Empty Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is INVALID_PASSWORD\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_PASSWORD');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "Boundary Tests",
      "item": [
        {
          "name": "TC-013: Minimum Email Length",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Short email accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email).to.eql('a@b.c');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"a@b.c\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-014: Minimum Password Length",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"8-character password accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"min.password@test.com\",\n    \"password\": \"Test123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-015: Very Long Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Long email accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email.length).to.be.above(100);",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate 200+ character email",
                  "let longEmail = 'a'.repeat(100) + '@' + 'b'.repeat(100) + '.com';",
                  "pm.variables.set('longEmail', longEmail);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{longEmail}}\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-016: Very Long Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Long password accepted\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate 100+ character password",
                  "let longPassword = 'Test1234!' + 'A'.repeat(91);",
                  "pm.variables.set('longPassword', longPassword);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"long.password@test.com\",\n    \"password\": \"{{longPassword}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-017: Email with Spaces (Trimmed)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Email is trimmed\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.email).to.eql('test@test.com');",
                  "    pm.expect(jsonData.email).to.not.include(' ');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"  test@test.com  \",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "Security Tests",
      "item": [
        {
          "name": "TC-018: SQL Injection - Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"SQL injection blocked\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin'--@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-019: SQL Injection - Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Invalid password format\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.be.oneOf(['INVALID_PASSWORD', 'WEAK_PASSWORD']);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"' OR '1'='1\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-020: XSS Attack - Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"XSS blocked\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"<script>alert('XSS')</script>@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-021: XSS Attack - Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Invalid password format\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.be.oneOf(['INVALID_PASSWORD', 'WEAK_PASSWORD']);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"<script>alert('XSS')</script>\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-022: Path Traversal - Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Path traversal blocked\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('INVALID_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"../../../etc/passwd@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-023: Password Encryption Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Password is not returned in plain text\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.password) {",
                  "        pm.expect(jsonData.password).to.not.eql('SecurePass123!');",
                  "        // Check if it looks like a hash (e.g., SHA256 is 64 characters)",
                  "        pm.expect(jsonData.password.length).to.be.at.least(32);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"security.test@example.com\",\n    \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "Duplicate Tests",
      "item": [
        {
          "name": "TC-024: Duplicate Email - Exact Match",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// First registration should succeed",
                  "if (pm.info.iteration === 0) {",
                  "    pm.test(\"First registration succeeds\", function () {",
                  "        pm.response.to.have.status(200);",
                  "    });",
                  "    // Store email for second request",
                  "    pm.collectionVariables.set('duplicateEmail', 'duplicate@test.com');",
                  "} else {",
                  "    pm.test(\"Duplicate registration blocked\", function () {",
                  "        pm.response.to.have.status(400);",
                  "    });",
                  "    pm.test(\"Error code is DUPLICATE_EMAIL\", function () {",
                  "        var jsonData = pm.response.json();",
                  "        pm.expect(jsonData.code).to.eql('DUPLICATE_EMAIL');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// This test should be run twice",
                  "// First time: register successfully",
                  "// Second time: should fail with duplicate error"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"duplicate@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        },
        {
          "name": "TC-025: Duplicate Email - Case Insensitive",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Assuming CaseSensitive@test.com was already registered",
                  "pm.test(\"Case insensitive duplicate blocked\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Error code is DUPLICATE_EMAIL\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.code).to.eql('DUPLICATE_EMAIL');",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// First register with CaseSensitive@test.com",
                  "// Then try to register with CASESENSITIVE@test.com"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"CASESENSITIVE@test.com\",\n    \"password\": \"Test1234!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "register"]
            }
          }
        }
      ]
    },
    {
      "name": "Cleanup",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        },
        {
          "name": "Delete User by ID",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "default"
    },
    {
      "key": "email",
      "value": "",
      "type": "default"
    },
    {
      "key": "password",
      "value": "",
      "type": "default"
    },
    {
      "key": "userId",
      "value": "",
      "type": "default"
    }
  ]
}